name: Automated seismological vizualisation 
on:
  # Schedule updates (each hour)
  schedule: [{cron: "0 * * * *"}]
  # Lines below let you run workflow manually and on each commit
  workflow_dispatch:
  push: {branches: ["master", "main"]}

jobs:
  Viz-EEW-MARN:
    runs-on: ubuntu-latest
    steps:
      - name: üîé Check out repository code
        uses: actions/checkout@v3
      
      - name: üêß Install python dependencies
        run: |
          python -m pip install --requirement ${{ github.workspace }}/requirements.txt      

      - name: üí° Run the main program # add nseconds=9999999999 ndays=9 limit=2 for full test
        id: seismoviz
        run: |
          python ${{ github.workspace }}/seismoviz fdsnev catalog_uri=USGS,${{ secrets.MARN_EEW_URL }} minmagnitude=4 longitude=-89 latitude=13.6 maxradius=2 debug=1 
      
      - name: üñ•Ô∏è Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "data/*.png,data/*ml,data/*seed"

      - name: üéÅ Archive all data and visuals in workspace  as an artifact for 1 day
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v3
        id: archive
        with:
          name: Data-and-Vizuals-MARN
          path: |
            ${{ github.workspace }}/data/*ml
            ${{ github.workspace }}/data/*seed
            ${{ github.workspace }}/data/*.png 
            ${{ github.workspace }}/data/*.mp4
          retention-days: 1
          if-no-files-found: error

      - name: üéâ Send mail
        if: steps.archive.outcome == 'success'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Github Actions job result
          to: ${{secrets.MAIL_TO}}
          from: ${{ github.repository }} # Luke Skywalker # <user@example.com>
          html_body: |
            <!DOCTYPE html>
            <html>
            <body>                  
              <h1>New event at MARN</h1>
              <p>Event processing of ${{github.repository}} for MARN completed successfully! </p>
              <p>Results available for 1 day here ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} </p>
            </body>
            </html>
          #cc: kyloren@example.com,leia@example.com
          #bcc: r2d2@example.com,hansolo@example.com
          #reply_to: luke@example.com
          #in_reply_to: <random-luke@example.com>
          ignore_cert: true
          attachments: ${{ github.workspace }}/data/*.png
          priority: high

      - run: echo "üçè This job's status is ${{ job.status }}."

  Viz-EEW-INETER:
    runs-on: ubuntu-latest
    steps:
      - name: üîé Check out repository code
        uses: actions/checkout@v3
      
      - name: üêß Install python dependencies
        run: |
          python -m pip install --requirement ${{ github.workspace }}/requirements.txt      

      - name: üí° Run the main program # add nseconds=9999999999 ndays=9 limit=2 for full test
        id: seismoviz
        run: |
          python ${{ github.workspace }}/seismoviz fdsnev catalog_uri=USGS,${{ secrets.INETER_EEW_URL }} inventory_url=${{ secrets.INETER_DATA_URL }} stream_url=${{ secrets.INETER_DATA_URL }}  minmagnitude=4 longitude=-86.5 latitude=12 maxradius=3 debug=1 
      
      - name: üñ•Ô∏è Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "data/*.png,data/*ml,data/*seed"

      - name: üéÅ Archive all data and visuals in workspace  as an artifact for 1 day
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v3
        id: archive
        with:
          name: Data-and-Vizuals-INETER
          path: |
            ${{ github.workspace }}/data/*ml
            ${{ github.workspace }}/data/*seed
            ${{ github.workspace }}/data/*.png 
            ${{ github.workspace }}/data/*.mp4
          retention-days: 1
          if-no-files-found: error

      - name: üéâ Send mail
        if: steps.archive.outcome == 'success'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Github Actions job result
          to: ${{secrets.MAIL_TO}}
          from: ${{ github.repository }} # Luke Skywalker # <user@example.com>
          html_body: |
            <!DOCTYPE html>
            <html>
            <body>  
              <h1>New event at INETER</h1>                
              <p>Event processing of ${{github.repository}} for INETER completed successfully! </p>
              <p>Results available for 1 day here ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} </p>
            </body>
            </html>
          #cc: kyloren@example.com,leia@example.com
          #bcc: r2d2@example.com,hansolo@example.com
          #reply_to: luke@example.com
          #in_reply_to: <random-luke@example.com>
          ignore_cert: true
          attachments: ${{ github.workspace }}/data/*.png
          priority: high
          
      - run: echo "üçè This job's status is ${{ job.status }}."
    
  Viz-EEW-UNA:
    runs-on: ubuntu-latest
    steps:
      - name: üîé Check out repository code
        uses: actions/checkout@v3
      
      - name: üêß Install python dependencies
        run: |
          python -m pip install --requirement ${{ github.workspace }}/requirements.txt      

      - name: üí° Run the main program # add nseconds=9999999999 ndays=9 limit=2 for full test
        id: seismoviz
        run: |
          python ${{ github.workspace }}/seismoviz fdsnev catalog_uri=USGS,${{ secrets.UNA_EEW_URL }} minmagnitude=4 longitude=-84.2 latitude=9.5 maxradius=3 debug=1
      
      - name: üñ•Ô∏è Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "data/*.png,data/*ml,data/*seed"

      - name: üéÅ Archive all data and visuals in workspace  as an artifact for 1 day
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v3
        id: archive
        with:
          name: Data-and-Vizuals-UNA
          path: |
            ${{ github.workspace }}/data/*ml
            ${{ github.workspace }}/data/*seed
            ${{ github.workspace }}/data/*.png 
            ${{ github.workspace }}/data/*.mp4
          retention-days: 1
          if-no-files-found: error

      - name: üéâ Send mail
        if: steps.archive.outcome == 'success'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Github Actions job result
          to: ${{secrets.MAIL_TO}}
          from: ${{ github.repository }} # Luke Skywalker # <user@example.com>
          html_body: |
              <!DOCTYPE html>
              <html>
              <body>
              <h1>New event at UNA</h1>
              <p>Event processing of ${{github.repository}} for UNA completed successfully! </p>
              <p>Results available for 1 day here ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} </p>
              </body>
              </html>
          #cc: kyloren@example.com,leia@example.com
          #bcc: r2d2@example.com,hansolo@example.com
          #reply_to: luke@example.com
          #in_reply_to: <random-luke@example.com>
          ignore_cert: true
          attachments: ${{ github.workspace }}/data/*.png
          priority: high

      - run: echo "üçè This job's status is ${{ job.status }}."
    
  Viz-EEW-INSIVUMEH:
    runs-on: ubuntu-latest
    steps:
      - name: üîé Check out repository code
        uses: actions/checkout@v3
      
      - name: üêß Install python dependencies
        run: |
          python -m pip install --requirement ${{ github.workspace }}/requirements.txt      

      - name: üí° Run the main program # add nseconds=9999999999 ndays=9 limit=2 for full test
        id: seismoviz
        run: |
          python ${{ github.workspace }}/seismoviz fdsnev catalog_uri=USGS,${{ secrets.INSIVUMEH_EEW_URL }} minmagnitude=4 longitude=-90.75 latitude=15. maxradius=4 debug=1
      
      - name: üñ•Ô∏è Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "data/*.png,data/*ml,data/*seed"

      - name: üéÅ Archive all data and visuals in workspace  as an artifact for 1 day
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v3
        id: archive
        with:
          name: Data-and-Vizuals-INSIVUMEH
          path: |
            ${{ github.workspace }}/data/*ml
            ${{ github.workspace }}/data/*seed
            ${{ github.workspace }}/data/*.png 
            ${{ github.workspace }}/data/*.mp4
          retention-days: 1
          if-no-files-found: error

      - name: üéâ Send mail
        if: steps.archive.outcome == 'success'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Github Actions job result
          to: ${{secrets.MAIL_TO}}
          from: ${{ github.repository }} # Luke Skywalker # <user@example.com>
          html_body: |
              <!DOCTYPE html>
              <html>
              <body>
              <h1>New event at INSIVUMEH</h1>
              <p>Event processing of ${{github.repository}} for INSIVUMEH completed successfully! </p>
              <p>Results available for 1 day here ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} </p>
              </body>
              </html>
          #cc: kyloren@example.com,leia@example.com
          #bcc: r2d2@example.com,hansolo@example.com
          #reply_to: luke@example.com
          #in_reply_to: <random-luke@example.com>
          ignore_cert: true
          attachments: ${{ github.workspace }}/data/*.png
          priority: high

      - run: echo "üçè This job's status is ${{ job.status }}."
    


# python ${{ github.workspace }}/seismo-viz.py catalog_uri='USGS',${{ secrets.UNA_EEW_URL }} stream_url=${{ secrets.UNA_EEW_URL }} minmagnitude=4 longitude=-84 latitude=9.5 maxradius=3 debug=1